---
import logoStar from "../assets/logo-star.svg";
import pinkStar from "../assets/pink-star.svg";

interface Props {
  currentPath: string;
}

const navLinks = [
  { label: "Home", href: "/" },
  { label: "Services", href: "/services" },
  { label: "Service Areas", href: "/service-areas" },
  { label: "Reviews", href: "/reviews" },
  { label: "Gallery", href: "/gallery" },
  { label: "Contact", href: "/contact" },
];

const { currentPath } = Astro.props satisfies Props;
---
<header class="relative border-[3px] border-black bg-paper px-4 py-6 md:px-6">
  <div class="pointer-events-none absolute -top-10 right-4 hidden h-24 w-24 rotate-12 md:block">
    <img src={pinkStar.src} alt="burst decoration" class="h-full w-full object-contain" loading="lazy" />
  </div>
  <div class="pointer-events-none absolute -bottom-12 left-2 h-24 w-24 -rotate-12 opacity-80 md:h-28 md:w-28">
    <img src={pinkStar.src} alt="burst decoration" class="h-full w-full object-contain" loading="lazy" />
  </div>

  <div class="mx-auto flex max-w-6xl flex-wrap items-center gap-4 border-[3px] border-black bg-white px-4 py-3 shadow-[8px_8px_0_#111] md:flex-nowrap md:px-6">
    <a class="group flex items-center gap-3 text-lg font-semibold uppercase tracking-wide text-black" href="/" aria-label="Tender Gardens home">
      <span class="grid size-12 place-items-center border-[3px] border-black bg-[#fce0f2] transition-transform duration-200 group-hover:-rotate-6">
        <img src={logoStar.src} alt="Tender Gardens logo" class="size-8" loading="lazy" />
      </span>
      <span class="leading-tight">
        Tender
        <span class="block text-sm font-medium text-stone-500">Gardens</span>
      </span>
    </a>

    <details class="ml-auto flex flex-1 justify-end md:hidden">
      <summary class="flex cursor-pointer items-center gap-2 rounded-full border-2 border-black px-4 py-2 text-sm font-semibold uppercase text-black opacity-90 transition hover:bg-[#ffdc58]/70">
        <i class="ri-menu-2-line text-lg"></i>
        Menu
      </summary>
      <nav class="mt-4 w-full">
        <ul class="grid gap-2">
          {navLinks.map((item) => {
            const active = currentPath === item.href || (item.href !== "/" && currentPath.startsWith(item.href));
            return (
              <li>
                <a
                  class={`flex w-full items-center justify-between border-2 border-black bg-white px-4 py-3 text-base font-semibold uppercase tracking-wide transition hover:bg-[#ffdc58]/60 ${active ? "bg-[#ffdc58]" : ""}`}
                  href={item.href}
                >
                  {item.label}
                  {active ? <span class="text-xs font-bold">//</span> : null}
                </a>
              </li>
            );
          })}
        </ul>
      </nav>
    </details>

    <nav class="hidden flex-1 md:flex md:justify-end">
      <ul class="flex w-full justify-end gap-1">
        {navLinks.map((item) => {
          const active = currentPath === item.href || (item.href !== "/" && currentPath.startsWith(item.href));
          return (
            <li class="flex">
              <a
                class={`relative flex items-center gap-1 border-l-[3px] border-black px-4 py-2 text-sm font-semibold uppercase tracking-wide transition hover:bg-[#ffdc58]/60 ${active ? "bg-[#ffdc58]" : ""}`}
                href={item.href}
              >
                <span>{item.label}</span>
                {active ? <span class="text-xs font-bold">//</span> : null}
              </a>
            </li>
          );
        })}
      </ul>
    </nav>
  </div>
</header>
